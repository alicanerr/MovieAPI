// <auto-generated />
using FilmAPI.Persistance.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FilmAPI.Persistance.Migrations
{
    [DbContext(typeof(MovieAPIDbContext))]
    partial class MovieAPIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FilmAPI.Domain.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FilmAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FilmYapimYil")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FilmAd = "Interstellar",
                            FilmYapimYil = 2014
                        },
                        new
                        {
                            Id = 2,
                            FilmAd = "Passangers",
                            FilmYapimYil = 2016
                        },
                        new
                        {
                            Id = 3,
                            FilmAd = "Tenet",
                            FilmYapimYil = 2020
                        });
                });

            modelBuilder.Entity("FilmAPI.Domain.Models.Film_Salon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("GosterimYili")
                        .HasColumnType("int");

                    b.Property<int>("SalonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.HasIndex("SalonId");

                    b.ToTable("Film_Salon");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FilmId = 1,
                            GosterimYili = 2014,
                            SalonId = 1
                        },
                        new
                        {
                            Id = 2,
                            FilmId = 1,
                            GosterimYili = 2014,
                            SalonId = 2
                        },
                        new
                        {
                            Id = 3,
                            FilmId = 1,
                            GosterimYili = 2015,
                            SalonId = 3
                        },
                        new
                        {
                            Id = 4,
                            FilmId = 2,
                            GosterimYili = 2016,
                            SalonId = 1
                        },
                        new
                        {
                            Id = 5,
                            FilmId = 3,
                            GosterimYili = 2020,
                            SalonId = 3
                        },
                        new
                        {
                            Id = 6,
                            FilmId = 3,
                            GosterimYili = 2020,
                            SalonId = 2
                        },
                        new
                        {
                            Id = 7,
                            FilmId = 3,
                            GosterimYili = 2020,
                            SalonId = 3
                        });
                });

            modelBuilder.Entity("FilmAPI.Domain.Models.Salon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SalonAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Salons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SalonAd = "A"
                        },
                        new
                        {
                            Id = 2,
                            SalonAd = "B"
                        },
                        new
                        {
                            Id = 3,
                            SalonAd = "C"
                        });
                });

            modelBuilder.Entity("FilmAPI.Domain.Models.Film_Salon", b =>
                {
                    b.HasOne("FilmAPI.Domain.Models.Film", "Film")
                        .WithMany("Film_Salon")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilmAPI.Domain.Models.Salon", "Salon")
                        .WithMany("Film_Salon")
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("FilmAPI.Domain.Models.Film", b =>
                {
                    b.Navigation("Film_Salon");
                });

            modelBuilder.Entity("FilmAPI.Domain.Models.Salon", b =>
                {
                    b.Navigation("Film_Salon");
                });
#pragma warning restore 612, 618
        }
    }
}
